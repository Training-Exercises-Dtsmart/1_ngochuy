<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;
use yii\helpers\ArrayHelper;
use yii\behaviors\TimestampBehavior;
use \app\models\PaymentTypeQuery;

/**
 * This is the base-model class for table "payment_types".
 *
 * @property integer $id
 * @property string $name
 * @property string $class
 * @property string $params
 * @property string $logo
 * @property integer $commission
 * @property integer $active
 * @property integer $payment_available
 * @property integer $sort
 * @property integer $created_at
 * @property integer $updated_at
 */
abstract class PaymentType extends \yii\db\ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'payment_types';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        $behaviors = parent::behaviors();
        $behaviors['timestamp'] = [
            'class' => TimestampBehavior::class,
                        ];
        
    return $behaviors;
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        $parentRules = parent::rules();
        return ArrayHelper::merge($parentRules, [
            [['commission', 'active', 'payment_available', 'sort'], 'integer'],
            [['name', 'class', 'params', 'logo'], 'string', 'max' => 255]
        ]);
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return ArrayHelper::merge(parent::attributeLabels(), [
            'id' => 'ID',
            'name' => 'Name',
            'class' => 'Class',
            'params' => 'Params',
            'logo' => 'Logo',
            'commission' => 'Commission',
            'active' => 'Active',
            'payment_available' => 'Payment Available',
            'sort' => 'Sort',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ]);
    }

    /**
     * @inheritdoc
     * @return PaymentTypeQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new PaymentTypeQuery(static::class);
    }
}
